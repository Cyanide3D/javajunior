1. Создайте пакет homework41, а в нем два файла:
   Homework_4_1
   Sample ( с методом main )

   Создайте метод main.
   Создайте 3 метода с именем print. Перегрузите их параметрами int, String, boolean и верните значение выводя их в консоль. Методы вызовите из main.

   Создайте 3 метода с разными модификаторами доступа. Попробуйте вызвать все эти методы из класса Sample,
   опишите в комменатрии у вызова какой из методов не вызывается (Метод, который нельзя по итогу вызвать так же можно закомментировать, чтобы приложение компилировалось)

   Создать 3 метода с разным типов возвращаемого значения (пример: public String printString(String title) ), где String - тип возвращаемого значения.
   На входе у них будет параметр того же типа, а сам метод возвращает в итоге этот параметр. В методе main вывести значения этих методов в консоль

   Создайте метод sum, принимающий на вход массив varargs. Этот метод должен считать сумму элементов массива.
   В методе main объявите обычный массив int[], заполненный разными значениями. Вызовите метод sum() в main, передав туда свой массив и выведите результат суммы в консоль.

2. Создайте пакет homework42
   Создать класс Person, который содержит:
   переменные fullName, age;
   методы move() и talk(), в которых просто вывести на консоль сообщение -"Такой-то  Person говорит".
   Добавьте два конструктора  - Person() и Person(fullName, age).
   Создайте класс Testing с методом main. В этом классе:
   Создайте два объекта этого класса. Один объект инициализируется конструктором Person(), другой - Person(fullName, age).
   Вызовите методы move() и talk().

3. Создайте пакет homework43
   Создайте класс Human. Задайте в нем 2 static переменные name и age. Добавьте static блок инициализации, где задайте этим переменным какие то значения.
   Далее, добавьте обычный блок инициализации {}, где так же задайте свои значения этим полям. Добавьте два метода: getName(), getAge().
   Создайте метод main и в нем попробуйте сделать следующее:
   а. Вывести в консоль от класса Human поля name, age.
   b. Вывести в консоль значения у созданного объекта Human поля с помощью соответствующих методов. Отличаются ли выводы в консоль? Если да, подумайте почему

4 Создайте пакет homework44
   Наследование Student, Aspirant
   Создайте пример наследования, реализуйте класс Student и класс Aspirant.
   Класс Student содержит переменные: String firstName, lastName, group. А также, double averageMark, содержащую среднюю оценку.
   Создать метод getScholarship() для класса Student, который возвращает сумму стипендии. Если средняя оценка студента равна 5, то сумма 2000 руб, иначе 1900. Переопределить этот метод в классе Aspirant.  Если средняя оценка аспиранта равна 5, то сумма 2500 руб, иначе 2200.
   Создайте класс Testing с методом main. В этом классе:
   Создать массив типа Student, содержащий объекты класса Student и Aspirant. Вызвать метод getScholarship() для каждого элемента массива.

5 Создайте пакет homework45
   Создать абстрактный класс Animal и расширяющие его классы Dog, Cat, Bear.
   Класс Animal содержит переменную name, конструктор и абстрактные методы makeNoise, eat, getDescription. Так же создать метод getName, он будет не абстрактный. Метод makeNoise, например, может выводить на консоль звуки животных. Метод  eat выводит на консоль список того, чем питается данное животное. Метод getDescription возвращает описание животного.
   Метод getName возвращает имя животного.
   Dog, Cat, Bear переопределяют методы makeNoise, eat, getDescription, getName, конструктор с методом super.
   Создайте класс Veterinarian, в котором определите метод void treatAnimal(Animal animal). Пусть этот метод распечатывает name и описание пришедшего на прием животного.
   Создайте класс Testing с методом main. В этом классе:
   В методе main создайте список типа Animal, в который запишите животных всех имеющихся у вас типов. В цикле отправляйте их на прием к ветеринару. В отдельном цикле вызовите методы  makeNoise, eat для каждого животного.

6. Создайте пакет homework46
	Написать программу, которая проверяет, что строка начинается буквой “J”или “N” и заканчивается “A”.
	Используем функциональный интерфейс Predicate.