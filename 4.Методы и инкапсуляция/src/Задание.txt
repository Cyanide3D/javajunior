1. Создайте пакет homework41, а в нем два файла:
   Homework_4_1 ( с методом main )
   Sample

   Создайте метод main.
   Создайте 3 метода с разным типом возвращаемого значение, в теле метода верните значение этого типа. Методы вызовите из main и выведите на экран.
   Создайте 3 метода в классе Sample.java с разными модификаторами доступа. Попробуйте вызвать все эти методы из класса Homework_4_1,
   опишите в комменатрии у вызова какой из методов не вызывается (Метод, который нельзя по итогу вызвать так же можно закомментировать, чтобы приложение компилировалось)
   Создайте 3 метода с разными параметрами. Сделайте так, чтобы эти методы возвращали переданный им параметр и выводилось на экран.

2. Создайте пакет homework42
   Создать класс Person, который содержит:
   переменные fullName, age;
   методы move() и talk(), в которых просто вывести на консоль сообщение -"Такой-то  Person говорит".
   Добавьте два конструктора  - Person() и Person(fullName, age).
   Создайте класс Testing с методом main. В этом классе:
   Создайте два объекта этого класса. Один объект инициализируется конструктором Person(), другой - Person(fullName, age).
   Вызовите методы move() и talk().

3. Создайте пакет homework43
   Наследование Student, Aspirant
   Создайте пример наследования, реализуйте класс Student и класс Aspirant, аспирант отличается от студента наличием некой научной работы.
   Класс Student содержит переменные: String firstName, lastName, group. А также, double averageMark, содержащую среднюю оценку.
   Создать метод getScholarship() для класса Student, который возвращает сумму стипендии. Если средняя оценка студента равна 5, то сумма 2000 руб, иначе 1900. Переопределить этот метод в классе Aspirant.  Если средняя оценка аспиранта равна 5, то сумма 2500 руб, иначе 2200.
   Создайте класс Testing с методом main. В этом классе:
   Создать массив типа Student, содержащий объекты класса Student и Aspirant. Вызвать метод getScholarship() для каждого элемента массива.

4. Создайте пакет homework44
   Создать абстрактный класс Animal и расширяющие его классы Dog, Cat, Bear.
   Класс Animal содержит переменную name, конструктор и абстрактные методы makeNoise, eat, getDescription. Так же создать метод getName, он будет не абстрактный. Метод makeNoise, например, может выводить на консоль звуки животных. Метод  eat выводит на консоль список того, чем питается данное животное. Метод getDescription возвращает описание животного.
   Метод getName возвращает имя животного.
   Dog, Cat, Bear переопределяют методы makeNoise, eat, getDescription, getName, конструктор с методом super.
   Создайте класс Veterinarian, в котором определите метод void treatAnimal(Animal animal). Пусть этот метод распечатывает name и описание пришедшего на прием животного.
   Создайте класс Testing с методом main. В этом классе:
   В методе main создайте список типа Animal, в который запишите животных всех имеющихся у вас типов. В цикле отправляйте их на прием к ветеринару. В отдельном цикле вызовите методы  makeNoise, eat для каждого животного.