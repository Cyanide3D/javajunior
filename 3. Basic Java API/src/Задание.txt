1.	Создайте файл Homework_3_1.java.
    В нем реализуйте две функции:
    boolean isPal (String str) – функция принимает строку и определяет, является ли данная строка палиндромом (с учетом регистра).
    Пустая строка не является палиндромом.
    String longestPal (String [] strings) – функция принимает в себя массив строк и возвращает самую длинную строку-палиндром из данного массива.
    В массиве могут присутствовать пустые строки и строки, не являющиеся палиндромами.
    Данная функция в своем теле для проверки должна использовать функцию isPal.

2.	Создайте файл Homework_3_2.java.
    В нем реализуйте функцию, которая принимает два параметра: строку str и целое положительное число n.
    Функция должна разделить строку на n равный частей, и вернуть список полученных строк.
    Если строку невозможно разделить на равные части, то возвращать пустой список.
    Пример 1:
    Входные данные: abcdefghijklmnopqrstuvwx, 4
    Результат: список вида [abcdef, ghijkl, mnopqr, stuvwx].
    Пример 2:
    Входные данные: abcdefghijklmnopqrstuvwx, 5
    Результат: пустой список.

3.	Создайте файл Homework_3_3.java.
    В нем реализуйте методы, которые принимают в себя массив случайных целочисленных элементов и находят в данном массиве:
    •	Максимальное значение
    •	Минимальное
    •	Среднее арифметическое
    •	Количество элементов между максимальным и минимальным элементом

4.	Создайте файл Homework_3_4.java.
    В нем реализуйте метод, который принимает два целочисленных положительных числа N и M и возвращает двумерный массив размерности N x M,
    заполненный случайными целыми числами в диапазоне [-100;100].
    После этого, создайте методы, которые принимают в себя двумерный массив и находят в нем:
    •	Максимальное значение
    •	Минимальное значение
    •	Сумму всех элементов массива
    •	Количество всех отрицательных элементов
    •	Количество всех положительных элементов

5.	Создайте файл Homework_3_5.java.
    В нем реализуйте метод, принимающий список строк (ArrayList <String>) и целое положительное число n и возвращает новый список строк, длина которых <=n.
    При этом в первом списке эти строки нужно удалить.
    Таким образом, мы получим 2 списка строк: в 1 будут все строки, длина которых больше n, а во втором – меньше или равно n.
    В этом же методе отсортируйте два списка строк.
    Если список-аргумент пустой, то просто возвращать пустой список.

6.	Создайте файл Homework_3_6.java.
    В нем в методе main:
    •	В нем в методе main создайте объекты класса LocalDate, LocalTime. С помощью них создайте объект класса LocalDateTime.
    •	Создайте 3 объекта класса DateTimeFormatter форматов SHORT, MEDIUM, LONG. Выведите вашу дату на экран в этих форматах.
    •	Создайте 3 собственных формата. Выведите вашу дату на экран в этих форматах.
    •	Создайте 3 строки под каждый собственный формат и преобразуйте их в дату и время. Выведите результат на экран.
